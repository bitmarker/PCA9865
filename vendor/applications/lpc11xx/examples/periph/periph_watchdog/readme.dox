/*
 * @brief WWDT example
 *
 * @note
 * Copyright(C) NXP Semiconductors, 2012
 * All rights reserved.
 *
 * @par
 * Software that is described herein is for illustrative purposes only
 * which provides customers with programming information regarding the
 * LPC products.  This software is supplied "AS IS" without any warranties of
 * any kind, and NXP Semiconductors and its licensor disclaim any and
 * all warranties, express or implied, including all implied warranties of
 * merchantability, fitness for a particular purpose and non-infringement of
 * intellectual property rights.  NXP Semiconductors assumes no responsibility
 * or liability for the use of the software, conveys no license or rights under any
 * patent, copyright, mask work right, or any other intellectual property rights in
 * or to any products. NXP Semiconductors reserves the right to make changes
 * in the software without notification. NXP Semiconductors also makes no
 * representation or warranty that such application will be suitable for the
 * specified use without further testing or modification.
 *
 * @par
 * Permission to use, copy, modify, and distribute this software and its
 * documentation is hereby granted, under NXP Semiconductors' and its
 * licensor's relevant copyrights in the software, without fee, provided that it
 * is used in conjunction with NXP Semiconductors microcontrollers.  This
 * copyright, permission, and disclaimer notice must appear in all copies of
 * this code.
 */

/** @defgroup EXAMPLES_PERIPH_11XX_WWDT LPC11xx Watchdog timer example
 * @ingroup EXAMPLES_PERIPH_11XX
 * <b>Example description</b><br>
 * This example shows how to use WWDT(Windowed Watchdog Timer)/WDT(Watchdog Timer)
 * to generate interrupts to manage the watchdog timer.<br>
 * If the watchdog timer isn't 'fed' within it's window time, it will
 * reset the device. The LED will toggle states on each watchdog feed event.
 * If the feed is disabled, the chip will reset.<br>
 *
 * The example works in one of 2 ways. For WWDT, the default way is to feed the
 * watchdog faster than it's warning interval. This is the normal operation of
 * the watchdog. The 2nd way of WWDT lets the watchdog generate a warning and
 * then feeds the watchdog timer on the warning (the LED will toggle on each
 * warning interval cycle). For WDT, the default way is to feed the watchdog
 * before time-out flag is set. The 2nd way lets the watchdog generate a time-out
 * interrupt (the LED will toggle on each time-out cycle).<br>
 * The 2nd way (both WWDT and WDT) can be enabled by commenting out the
 * DISABLE_WDT_TIMEOUT definition.<br>
 *
 * <b>Special connection requirements</b><br>
 * There are no special connection requirements for this example.<br>
 *
 * <b>Build procedures:</b><br>
 * Visit the <a href="http://www.lpcware.com/content/project/lpcopen-platform-nxp-lpc-microcontrollers/lpcopen-v200-quickstart-guides">LPCOpen quickstart guides</a>
 * to get started building LPCOpen projects.
 *
 * <b>Supported boards and board setup:</b><br>
 * @ref LPCOPEN_11XX_BOARD_XPRESSO_11U14<br>
 * @ref LPCOPEN_11XX_BOARD_BLUEBOARD_11U24<br>
 * @ref LPCOPEN_11XX_BOARD_XPRESSO_11C24<br>
 * @ref LPCOPEN_11XX_BOARD_MCORE48_1125<br>
 *
 * <b>Submitting LPCOpen issues:</b><br>
 * @ref LPCOPEN_COMMUNITY
 * @{
 */

/**
 * @}
 */
